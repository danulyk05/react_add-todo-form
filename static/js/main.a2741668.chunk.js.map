{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","style","listStyleType","margin","padding","map","username","getUserId","userName","foundId","usersFromServer","find","length","userId","App","useState","setTitle","setUser","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","todosArr","titleError","trim","userError","push","sort","a","b","htmlFor","type","placeholder","value","onChange","target","selected","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2741668.chunk.js","sourcesContent":["import { User } from '../../Types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../Types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Types/todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const listStyles = {\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n  };\n\n  return (\n    <section className=\"TodoList\">\n      <ul style={listStyles}>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            <TodoInfo todo={todo} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './Types/user';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './Types/todo';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => userId === user.id);\n\n  return foundUser || null;\n}\n\nfunction getUserByName(userName: string): User | null {\n  const foundUser = usersFromServer.find((user) => userName === user.name);\n\n  return foundUser || null;\n}\n\nfunction getUserId(userName: string): number {\n  const foundId = usersFromServer.find((user) => userName === user.name);\n\n  if (!foundId) {\n    return usersFromServer.length + 1;\n  }\n\n  return foundId.id;\n}\n\nfunction getMaxId(todosArr: Todo[]): number {\n  const maxId = todosArr.sort((a, b) => b.id - a.id);\n\n  return maxId[0].id;\n}\n\nexport const todos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const addTodo = (event: FormEvent) => {\n    event.preventDefault();\n    const titleError = !title.trim().length;\n    const userError = !user.trim().length;\n\n    if (titleError && userError) {\n      setErrorTitle(true);\n      setErrorUser(true);\n\n      return;\n    }\n\n    if (titleError) {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (userError) {\n      setErrorUser(true);\n\n      return;\n    }\n\n    todos.push({\n      id: getMaxId(todos) + 1,\n      title,\n      completed: false,\n      userId: getUserId(user),\n      user: getUserByName(user),\n    });\n\n    setTitle('');\n    setUser('');\n  };\n\n  function handleChangeTitle(event: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(event.target.value);\n    setErrorTitle(false);\n  }\n\n  function handleChangeSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUser(event.target.value);\n    setErrorUser(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n            data-cy=\"titleInput\"\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n          <select\n            id=\"userSelect\"\n            value={user}\n            onChange={handleChangeSelect}\n            data-cy=\"userSelect\"\n          >\n            <option\n              value=\"0\"\n              selected\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(person => {\n              return (\n                <option key={person.id} value={person.name}>\n                  {person.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}