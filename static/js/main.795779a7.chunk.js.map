{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","getUserId","userName","foundId","usersFromServer","find","undefined","length","userId","App","useState","setTitle","setUser","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","todosArr","titleError","userError","push","sort","a","b","htmlFor","type","placeholder","value","onChange","target","selected","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.795779a7.chunk.js","sourcesContent":["import { User } from '../../Types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../Types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Types/todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './Types/user';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './Types/todo';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => userId === user.id);\n\n  return foundUser || null;\n}\n\nfunction getUserByName(userName: string): User | null {\n  const foundUser = usersFromServer.find((user) => userName === user.name);\n\n  return foundUser || null;\n}\n\nfunction getUserId(userName: string): number {\n  const foundId = usersFromServer.find((user) => userName === user.name);\n\n  if (foundId === undefined) {\n    return usersFromServer.length + 1;\n  }\n\n  return foundId.id;\n}\n\nfunction getMaxId(todosArr: Todo[]): number {\n  const maxId = todosArr.sort((a, b) => b.id - a.id);\n\n  return maxId[0].id;\n}\n\nexport const todos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const addTodo = (event: FormEvent) => {\n    event.preventDefault();\n    const titleError = title.length === 0;\n    const userError = user.length === 0;\n\n    if (titleError && userError) {\n      setErrorTitle(true);\n      setErrorUser(true);\n\n      return;\n    }\n\n    if (titleError) {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (userError) {\n      setErrorUser(true);\n\n      return;\n    }\n\n    todos.push({\n      id: getMaxId(todos) + 1,\n      title,\n      completed: false,\n      userId: getUserId(user),\n      user: getUserByName(user),\n    });\n\n    setTitle('');\n    setUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n            data-cy=\"titleInput\"\n          />\n          {errorTitle\n            ? <span className=\"error\">Please enter a title</span>\n            : ''}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n          <select\n            id=\"userSelect\"\n            value={user}\n            onChange={event => {\n              setUser(event.target.value);\n              setErrorUser(false);\n            }}\n            data-cy=\"userSelect\"\n          >\n            <option\n              value=\"0\"\n              selected\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(person => {\n              return (\n                <option value={person.name}>\n                  {person.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {errorUser\n            ? <span className=\"error\">Please choose a user</span>\n            : ''}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}